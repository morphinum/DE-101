https://www.youtube.com/watch?v=O8N1lvkIjig&t=1266s
- netstat -tulpen
- ip a — просмотр ip адреса нашего сервера (лучше использовать hostname -I)

[] - необязательные параметры


==================================================================================================================================
terminal
==================================================================================================================================
- docker system prune -a --volumes — полная очистка docker (предварительно все контейнеры должны быть остановлены)

- docker pull image_name — скачивание образа 
- docker run [опции] image_name [echo "команда"] — создание контейнера [с командой при запуске]
    --rm удаление контейнера после окончания его работы
      -d создание контейнера на фоне (detached mode), то есть консоль будет доступна при его работе
  --name container_name дает название контейнеру
      -p 8080:80 — port maping, передает порт (точнее 2), первый порт - хоста, второй - контейнера.
      -v создает volumes, 

- docker start CONTAINER_ID — запуск уже существующего контейнер
- docker ps — просмотр всех запущеных контейнеров
- docker ps -a — просмотр всех созданных контейнеров (включая незапущеные)
- docker iamges — просмотр всех образов

- docker inspect CONTAINER_ID — 
- docker stats [CONTAINER_ID] — просмотр задействованных ресурсов [определенного контейнера]
- docker logs CONTAINER_ID [опции] — мониторинг процессов
    -f позволяется моиторить логи в реальном времени
- docker exec -it CONTAINER_ID //bin//bash — прямое подключение в док-контейнер в интерактивном режиме

- docker rm CONTAINER_ID — удаление контейнера
- docker rmi IMAGE_ID — удаление образа

- docker pause CONTAINER_ID — ставим на паузу контейнер
- docker unpause CONTAINER_ID — выводим из паузы контейнер

- docker stop CONTAINER_ID — мягкая остановка контейнера
- docker kill CONTAINER_ID - грубая остановка контейнера
==================================================================================================================================
network
==================================================================================================================================
- docker network create --drive bridge NETWORK_NAME — создание сети с типом сети bridge
- docker run --net NETWORK_NAME image_name — запуск образа в сети NETWORK_NAME
